<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:annotation>
        <xs:documentation>This is the remote / fallback configuration for all configuration TSPs. </xs:documentation>
    </xs:annotation>
    <!-- START SBB TYPES -->
    <!--attributeGroups -->
    <xs:attributeGroup name="sopConfigAttribGroup">
        <xs:attribute name="sbb_configuration_attribute_added" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_changed" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_fixed" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_final" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_access" type="xs:string" use="optional"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="sopNamedConfigAttribGroup">
        <xs:attribute name="name" type="xs:string" use="optional" default="default"/>
        <xs:attributeGroup ref="sopConfigAttribGroup"/>
    </xs:attributeGroup>
    <!-- specific simpleTypes -->
    <!-- general complex types for elements holding one config value each -->
    <xs:complexType name="unnamedBooleanConfig">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedBooleanConfig">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unnamedStringConfig">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedStringConfig">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unnamedByteConfig">
        <xs:simpleContent>
            <xs:extension base="xs:byte">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedByteConfig">
        <xs:simpleContent>
            <xs:extension base="xs:byte">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unnamedIntConfig">
        <xs:simpleContent>
            <xs:extension base="xs:int">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedIntConfig">
        <xs:simpleContent>
            <xs:extension base="xs:int">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="sanitycheckConfig">
        <xs:all>
            <xs:element name="period" type="unnamedByteConfig" default="0">
                <xs:annotation>
                    <xs:documentation>The time between two sanity checks. Default is 0 min, means no sanitiy check will be made.
                        </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="delay" type="unnamedIntConfig" default="30000">
                <xs:annotation>
                    <xs:documentation>The time in ms the timer waits before it starts a timer teak. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="maxObservationProcessingTime" type="unnamedIntConfig" default="1000">
                <xs:annotation>
                    <xs:documentation>The minimal time in ms which a connection to a backend must be available. If it is not possible to
                        create a connection to a backend in the given time, the backend will be declared as dead. </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
    <xs:simpleType name="authenticationConfig">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="simple"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="namedAuthenticationConfig">
        <xs:simpleContent>
            <xs:extension base="authenticationConfig">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ldapType">
        <xs:all>
            <xs:element name="initial-context-factory" type="unnamedStringConfig"
                default="com.sun.jndi.ldap.LdapCtxFactory">
                <xs:annotation>
                    <xs:documentation>Java class that provides connections to LDAP server via JNDI.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="providerURL" type="xs:anyURI">
                <xs:annotation>
                    <xs:documentation>URL of LDAP server, including the root context. The root context is an LDAP DN and separated from
                        the URL by a slash (/).</xs:documentation>
                    <xs:documentation>Example: ldap://192.168.100.68:1389/o=ubbrief.deutschepost.de</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="secure-auth" type="authenticationConfig" default="none">
                <xs:annotation>
                    <xs:documentation>Level of authentication. If set to 'simple', username/password credentials will be used, if set
                        to 'none', no credentials will be used.</xs:documentation>
                    <xs:documentation>Possible values: simple, none</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindDN" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>JNDI folder name of the subsystem context (here: Authentication). An LDAP DN is
                        expected.</xs:documentation>
                    <xs:documentation>Example: uid=SystemUserAuthenticationTSP</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindPassword" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>Password for access to 'bindDN'. Required, if 'secure-auth' is set to
                        'simple'.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
    <xs:complexType name="ldapTypeWithConnectionPool">
        <xs:all>
            <xs:element name="initial-context-factory" type="unnamedStringConfig"
                default="com.sun.jndi.ldap.LdapCtxFactory">
                <xs:annotation>
                    <xs:documentation>Java class that provides connections to LDAP server via JNDI.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="providerURL" type="xs:anyURI">
                <xs:annotation>
                    <xs:documentation>URL of LDAP server, including the root context. The root context is an LDAP DN and separated from
                        the URL by a slash (/).</xs:documentation>
                    <xs:documentation>Example: ldap://192.168.100.68:1389/o=ubbrief.deutschepost.de</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="secure-auth" type="authenticationConfig" default="none">
                <xs:annotation>
                    <xs:documentation>Level of authentication. If set to 'simple', username/password credentials will be used, if set
                        to 'none', no credentials will be used.</xs:documentation>
                    <xs:documentation>Possible values: simple, none</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindDN" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>JNDI folder name of the subsystem context (here: Authentication). An LDAP DN is
                        expected.</xs:documentation>
                    <xs:documentation>Example: uid=SystemUserAuthenticationTSP</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindPassword" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>Password for access to 'bindDN'. Required, if 'secure-auth' is set to
                        'simple'.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="connection-pool" type="xs:boolean" default="false" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Flag which controls the pooling behaviour of LDAP connections.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
    <!-- END SBB TYPES -->
    <!-- include the central SBB types -->
    <!--xs:redefine schemaLocation="sbb_types.xsd"/-->
    <xs:simpleType name="repositoryConfig">
        <xs:restriction base="xs:string">
            <xs:enumeration value="FILE"/>
            <xs:enumeration value="JNDI"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="namedRepositoryConfig">
        <xs:simpleContent>
            <xs:extension base="repositoryConfig">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--  root element -->
    <xs:element name="configuration">
        <xs:complexType>
            <xs:all>
                <xs:element name="resource-root" type="namedStringConfig" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Defines the location of the directory containing the resource files.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="repository-file" type="namedStringConfig" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Defines the location of the storage file.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="cache-repository-read" type="namedBooleanConfig">
                    <xs:annotation>
                        <xs:documentation>Activate / Deactivate usage of the caching functionality in the JNDI backend. It is strongly
                            discouraged to set this to 'true' in a clustered configuration repository environment.
                            </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="used-repository" type="namedRepositoryConfig">
                    <xs:annotation>
                        <xs:documentation>Selection of the storage backend for the provider. Allowed values are: FILE - for the file system-based backend; JNDI - for an LDAP-based backend.
                            If set to FILE, the parameters 'resource-root' and 'repository-file' must be set. If set to JNDI, all LDAP parameters (with 'ldap.' prefix in the parameter name) must be set.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="path-separator" type="namedStringConfig">
                    <xs:annotation>
                        <xs:documentation>Defines the separator for sub-trees. Should be left as '.'. </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="ldap" type="ldapTypeWithPrefixUseSchemaAndConnectionPool" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The LDAP to store the configuration in. Required if 'used-repository' is set to 'JNDI'.
                            </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="sanitycheck" type="sanitycheckConfig">
                    <xs:annotation>
                        <xs:documentation>Configuration parameters for periodic TSP sanity check.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <!-- types for complex sub elements -->
    <xs:complexType name="ldapTypeWithPrefixUseSchemaAndConnectionPool">
        <xs:all>
            <xs:element name="initial-context-factory" type="unnamedStringConfig"
                default="com.sun.jndi.ldap.LdapCtxFactory">
                <xs:annotation>
                    <xs:documentation>Java class that provides connections to LDAP server via JNDI.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="providerURL" type="xs:anyURI">
                <xs:annotation>
                    <xs:documentation>URL of LDAP server, including the root context. The root context is an LDAP DN and separated from
                        the URL by a slash (/).</xs:documentation>
                    <xs:documentation>Example: ldap://192.168.100.68:1389/o=ubbrief.deutschepost.de</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="secure-auth" type="authenticationConfig" default="none">
                <xs:annotation>
                    <xs:documentation>Level of authentication. If set to 'simple', username/password credentials will be used, if set
                        to 'none', no credentials will be used.</xs:documentation>
                    <xs:documentation>Possible values: simple, none</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindDN" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>JNDI folder name of the subsystem context (here: Authentication). An LDAP DN is
                        expected.</xs:documentation>
                    <xs:documentation>Example: uid=SystemUserAuthenticationTSP</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindPassword" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>Password for access to 'bindDN'. Required, if 'secure-auth' is set to
                        'simple'.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="connection-pool" type="xs:boolean" default="false" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Flag which controls the pooling behaviour of LDAP connections.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="prefix" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>Defines the configuration of the LDAP component with the specific name in this configuration
                        file.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="use-schema" type="namedBooleanConfig">
                <xs:annotation>
                    <xs:documentation>Define whether setting using the LDAP schema for the SOP configuration directory should be
                        activated. Leave as 'true'.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
</xs:schema>
