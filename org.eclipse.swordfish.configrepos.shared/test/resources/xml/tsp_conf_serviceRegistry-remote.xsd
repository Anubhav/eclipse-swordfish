<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:annotation>
        <xs:documentation>This is the remote / fallback configuration for the service registry TSP.</xs:documentation>
    </xs:annotation>
    <!-- START SBB TYPES -->
    <!--attributeGroups -->
    <xs:attributeGroup name="sopConfigAttribGroup">
        <xs:attribute name="sbb_configuration_attribute_added" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_changed" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_fixed" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_final" type="xs:boolean" use="optional"/>
        <xs:attribute name="sbb_configuration_attribute_access" type="xs:string" use="optional"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="sopNamedConfigAttribGroup">
        <xs:attribute name="name" type="xs:string" use="optional" default="default"/>
        <xs:attributeGroup ref="sopConfigAttribGroup"/>
    </xs:attributeGroup>
    <!-- specific simpleTypes -->
    <!-- general complex types for elements holding one config value each -->
    <xs:complexType name="unnamedBooleanConfig">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedBooleanConfig">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unnamedStringConfig">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedStringConfig">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unnamedByteConfig">
        <xs:simpleContent>
            <xs:extension base="xs:byte">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedByteConfig">
        <xs:simpleContent>
            <xs:extension base="xs:byte">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unnamedIntConfig">
        <xs:simpleContent>
            <xs:extension base="xs:int">
                <xs:attributeGroup ref="sopConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="namedIntConfig">
        <xs:simpleContent>
            <xs:extension base="xs:int">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="sanitycheckConfig">
        <xs:all>
            <xs:element name="period" type="unnamedByteConfig" default="0">
                <xs:annotation>
                    <xs:documentation>The time between two sanity checks. Default is 0 min, means no sanitiy check will be made.
                        </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="delay" type="unnamedIntConfig" default="30000">
                <xs:annotation>
                    <xs:documentation>The time in ms the timer waits before it starts a timer teak. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="maxObservationProcessingTime" type="unnamedIntConfig" default="1000">
                <xs:annotation>
                    <xs:documentation>The minimal time in ms which a connection to a backend must be available. If it is not possible to
                        create a connection to a backend in the given time, the backend will be declared as dead. </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
    <xs:simpleType name="authenticationConfig">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="simple"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="namedAuthenticationConfig">
        <xs:simpleContent>
            <xs:extension base="authenticationConfig">
                <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ldapType">
        <xs:all>
            <xs:element name="initial-context-factory" type="unnamedStringConfig"
                default="com.sun.jndi.ldap.LdapCtxFactory">
                <xs:annotation>
                    <xs:documentation>Java class that provides connections to LDAP server via JNDI.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="providerURL" type="xs:anyURI">
                <xs:annotation>
                    <xs:documentation>URL of LDAP server, including the root context. The root context is an LDAP DN and separated from
                        the URL by a slash (/).</xs:documentation>
                    <xs:documentation>Example: ldap://192.168.100.68:1389/o=ubbrief.deutschepost.de</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="secure-auth" type="authenticationConfig" default="none">
                <xs:annotation>
                    <xs:documentation>Level of authentication. If set to 'simple', username/password credentials will be used, if set
                        to 'none', no credentials will be used.</xs:documentation>
                    <xs:documentation>Possible values: simple, none</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindDN" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>JNDI folder name of the subsystem context (here: Authentication). An LDAP DN is
                        expected.</xs:documentation>
                    <xs:documentation>Example: uid=SystemUserAuthenticationTSP</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindPassword" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>Password for access to 'bindDN'. Required, if 'secure-auth' is set to
                        'simple'.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
    <xs:complexType name="ldapTypeWithConnectionPool">
        <xs:all>
            <xs:element name="initial-context-factory" type="unnamedStringConfig"
                default="com.sun.jndi.ldap.LdapCtxFactory">
                <xs:annotation>
                    <xs:documentation>Java class that provides connections to LDAP server via JNDI.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="providerURL" type="xs:anyURI">
                <xs:annotation>
                    <xs:documentation>URL of LDAP server, including the root context. The root context is an LDAP DN and separated from
                        the URL by a slash (/).</xs:documentation>
                    <xs:documentation>Example: ldap://192.168.100.68:1389/o=ubbrief.deutschepost.de</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="secure-auth" type="authenticationConfig" default="none">
                <xs:annotation>
                    <xs:documentation>Level of authentication. If set to 'simple', username/password credentials will be used, if set
                        to 'none', no credentials will be used.</xs:documentation>
                    <xs:documentation>Possible values: simple, none</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindDN" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>JNDI folder name of the subsystem context (here: Authentication). An LDAP DN is
                        expected.</xs:documentation>
                    <xs:documentation>Example: uid=SystemUserAuthenticationTSP</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bindPassword" type="unnamedStringConfig">
                <xs:annotation>
                    <xs:documentation>Password for access to 'bindDN'. Required, if 'secure-auth' is set to
                        'simple'.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="connection-pool" type="xs:boolean" default="false" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Flag which controls the pooling behaviour of LDAP connections.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
    </xs:complexType>
    <!-- END SBB TYPES -->
    <!--  root element -->
    <xs:element name="configuration">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="config">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="init-param" type="srFallbackInitParamType" minOccurs="7" maxOccurs="unbounded"/>
                        </xs:sequence>
                        <xs:attributeGroup ref="sopNamedConfigAttribGroup"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- types for complex sub elements -->
    <xs:complexType name="srFallbackInitParamType">
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="default.timeout">
                        <xs:annotation>
                            <xs:documentation>This parameter is for the UDDI backend. This is the default timeout for HTTP requests to the UDDI backend in ms.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="sr.pool.minIdle">
                        <xs:annotation>
                            <xs:documentation>This parameter is for the pooling of service registry instances. This is the minimum number of idle instances in the pool, which is also the number of instances activated initially to serve requests. At runtime, more instances are actived on demand.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="sr.pool.maxIdle">
                        <xs:annotation>
                            <xs:documentation>This parameter is for the pooling of service registry instances. This is the maximum number of idle instances in the pool.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="max.streamsize">
                        <xs:annotation>
                            <xs:documentation>This parameter restricts the size (in bytes) of web service requests to the service registry. It also restricts the size of response messages from the UDDI backend and LDAP storage backend. Service registry accepts only response messages from the UDDI backend with a size (in bytes) less than this number. Service registry reads only annotations from the (LDAP) storage backend with a size (in bytes) less than this number.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="storage.ldap.maxConn">
                        <xs:annotation>
                            <xs:documentation>This parameter is for the LDAP storage backend. This number is the maximum number of connections to the LDAP storage backend that can be opened.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="agreed.policy.valid.durationtime">
                        <xs:annotation>
                            <xs:documentation>This parameter is related to policy handling. The parameter defines the time in ms that agreed policies are valid.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="assertion.handler.responsetime.transport">
                        <xs:annotation>
                            <xs:documentation>This parameter is related to policy handling. The parameter defines the time (in ms, on average) that a message spends on the wire (i.e. the time a message is on its way from the participant who initially sends the message to the participant who is the ultimate receiver of the message). The service registry considers this number when computing results for the 'responsetime' policy assertion.</xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="value" type="xs:int" use="required"/>
        <xs:attributeGroup ref="sopConfigAttribGroup"/>
    </xs:complexType>
</xs:schema>
