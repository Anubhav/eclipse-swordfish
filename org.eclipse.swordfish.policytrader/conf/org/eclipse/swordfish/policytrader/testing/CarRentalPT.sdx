<?xml version="1.0" encoding="UTF-8"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<wsdl:definitions
  targetNamespace="http://services.sopware.org/demos/CarRental/1.0"
  xmlns="http://schemas.xmlsoap.org/wsdl/"
  xmlns:doc="http://types.sopware.org/service/Documentation/1.0"
  xmlns:pri="http://services.sopware.org/demos/CarRental/1.0"
  xmlns:sdx="http://types.sopware.org/service/ServiceDescription/2.0"
  xmlns:tns="http://services.sopware.org/demos/CarRental/1.0"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:types>
    <xsd:schema
      targetNamespace="http://services.sopware.org/demos/CarRental/1.0"
      xmlns:pri="http://services.sopware.org/demos/CarRental/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:element name="returnCarRequest" type="pri:returnCarRequestType"/>
      <xsd:element name="returnCarResponse" type="pri:returnCarResponseType"/>
      <xsd:element name="returnCarFault" type="pri:returnCarFaultType"/>
      <xsd:element name="rentCarRequest" type="pri:rentCarRequestType"/>
      <xsd:element name="rentCarResponse" type="pri:rentCarResponseType"/>
      <xsd:element name="rentCarFault" type="pri:rentCarFaultType"/>
      <xsd:element name="noticeBoardMessage" type="pri:noticeBoardMessageType"/>
      <xsd:element name="deleteCarRequest" type="pri:deleteCarRequestType"/>
      <xsd:element name="deleteCarResponse" type="pri:deleteCarResponseType"/>
      <xsd:element name="deleteCarFault" type="pri:deleteCarFaultType"/>
      <xsd:element name="addCarRequest" type="pri:addCarRequestType"/>
      <xsd:element name="addCarResponse" type="pri:addCarResponseType"/>
      <xsd:element name="addCarFault" type="pri:addCarFaultType"/>
      <xsd:element name="listAllCarsRequest" type="pri:listAllCarsRequestType"/>
      <xsd:element name="listAllCarsResponse" type="pri:listAllCarsResponseType"/>
      <xsd:element name="listAllCarsFault" type="pri:listAllCarsFaultType"/>
      <xsd:element name="getCarInfoRequest" type="pri:getCarInfoRequestType"/>
      <xsd:element name="getCarInfoResponse" type="pri:getCarInfoResponseType"/>
      <xsd:element name="getCarInfoFault" type="pri:getCarInfoFaultType"/>
      <xsd:complexType name="returnCarRequestType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
          <xsd:element name="operator" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="returnCarResponseType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="returnCarFaultType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
          <xsd:element name="errorMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="rentCarRequestType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
          <xsd:element name="operator" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="rentCarResponseType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="rentCarFaultType">
        <xsd:sequence>
          <xsd:element name="errorMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="noticeBoardMessageType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
          <xsd:element name="message" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteCarRequestType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteCarResponseType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="deleteCarFaultType">
        <xsd:sequence>
          <xsd:element name="errorMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addCarRequestType">
        <xsd:sequence>
          <xsd:element name="image" type="xsd:string"/>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addCarResponseType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="addCarFaultType">
        <xsd:sequence>
          <xsd:element name="errorMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="listAllCarsRequestType">
        <xsd:sequence>
          <xsd:element name="operator" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="listAllCarsResponseType">
        <xsd:sequence>
          <xsd:element name="listOfCars" type="pri:carList"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="listAllCarsFaultType">
        <xsd:sequence>
          <xsd:element name="errorMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCarInfoRequestType">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCarInfoResponseType">
        <xsd:sequence>
          <xsd:element name="carInfo" type="pri:carInfo"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="getCarInfoFaultType">
        <xsd:sequence>
          <xsd:element name="errorMessage" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="carList">
        <xsd:sequence>
          <xsd:element name="carObject" type="pri:car"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="car">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="carId" type="xsd:string"/>
          <xsd:element minOccurs="0" name="carStatus" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="carInfo">
        <xsd:sequence>
          <xsd:element name="carId" type="xsd:string"/>
          <xsd:element minOccurs="0" name="rentedBy" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="oneWayTest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="in" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="oneWayTestResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="out" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="oneWayTestResponse1">
        <xsd:complexType>
          <xsd:sequence>
          	<xsd:element name="out" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="listAllCarsRequest">
    <wsdl:part element="tns:listAllCarsRequest" name="listAllCarsRequest"/>
  </wsdl:message>
  <wsdl:message name="getCarInfoFault">
    <wsdl:part element="tns:getCarInfoFault" name="getCarInfoFault"/>
  </wsdl:message>
  <wsdl:message name="deleteCarResponse">
    <wsdl:part element="tns:deleteCarResponse" name="deleteCarResponse"/>
  </wsdl:message>
  <wsdl:message name="addCarFault">
    <wsdl:part element="tns:addCarFault" name="addCarFault"/>
  </wsdl:message>
  <wsdl:message name="oneWayTestResponse">
    <wsdl:part element="tns:oneWayTestResponse1" name="body"/>
  </wsdl:message>
  <wsdl:message name="rentCarFault">
    <wsdl:part element="tns:rentCarFault" name="fault"/>
  </wsdl:message>
  <wsdl:message name="returnCarRequest">
    <wsdl:part element="tns:returnCarRequest" name="returnCarRequest"/>
  </wsdl:message>
  <wsdl:message name="returnCarResponse">
    <wsdl:part element="tns:returnCarResponse" name="returnCarResponse"/>
  </wsdl:message>
  <wsdl:message name="getCarInfoResponse">
    <wsdl:part element="tns:getCarInfoResponse" name="getCarInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="noticeBoardMessageResponse">
    <wsdl:part element="tns:noticeBoardMessage" name="body"/>
  </wsdl:message>
  <wsdl:message name="listAllCarsFault">
    <wsdl:part element="tns:listAllCarsFault" name="listAllCarsFault"/>
  </wsdl:message>
  <wsdl:message name="returnCarFault">
    <wsdl:part element="tns:returnCarFault" name="returnCarFault"/>
  </wsdl:message>
  <wsdl:message name="rentCarResponse">
    <wsdl:part element="tns:rentCarResponse" name="response"/>
  </wsdl:message>
  <wsdl:message name="getCarInfoRequest">
    <wsdl:part element="tns:getCarInfoRequest" name="getCarInfoRequest"/>
  </wsdl:message>
  <wsdl:message name="addCarRequest">
    <wsdl:part element="tns:addCarRequest" name="addCarRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteCarRequest">
    <wsdl:part element="tns:deleteCarRequest" name="deleteCarRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteCarFault">
    <wsdl:part element="tns:deleteCarFault" name="deleteCarFault"/>
  </wsdl:message>
  <wsdl:message name="addCarResponse">
    <wsdl:part element="tns:addCarResponse" name="addCarResponse"/>
  </wsdl:message>
  <wsdl:message name="listAllCarsResponse">
    <wsdl:part element="tns:listAllCarsResponse" name="listAllCarsResponse"/>
  </wsdl:message>
  <wsdl:message name="oneWayTestRequest">
    <wsdl:part element="tns:oneWayTest" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="rentCarRequest">
    <wsdl:part element="tns:rentCarRequest" name="rentCarRequest"/>
  </wsdl:message>
  <wsdl:portType name="CarRentalConsumer"
    sdx:partnerPortType="tns:CarRental" sdx:status="design">
    <wsdl:operation name="oneWayTestResponse" sdx:partnerOperation="oneWayTest">
      <wsdl:input message="tns:oneWayTestResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <plnk:partnerLinkType name="CallbackPartnerLink" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/">
    <plnk:role name="service">
      <plnk:portType name="tns:CarRental"/>
    </plnk:role>
    <plnk:role name="callback">
      <plnk:portType name="tns:CarRentalConsumer"/>
    </plnk:role>
  </plnk:partnerLinkType>
  <portType name="CarRental" sdx:status="design">
    <documentation>
      <doc:shortDescription>This service demonstrates how provider and consumer can interact. A rudimentary "car rental" business is simulated.&#xd;&#xd;
On the provider side, there are initially N (depending on configuration) cars with unique IDs.&#xd;&#xd;
Each operator can list all available cars and view detailed info for any car (including car image) &#xd;&#xd;
The operator is able to register in the database that a car is rented or returned &#xd;&#xd;
If the operator tries to rent already rented car, or tries to returned car rented by another operator it will become error&#xd;&#xd;
The Notice Board on customer will be subscribed on all notifications issued by provider &#xd;&#xd;
The provider will dispatch all events (car rent or returned info) to the Notice Board &#xd;&#xd;
			</doc:shortDescription>
      <doc:purpose>This is a very simple service designed to demonstrate the workings of services to non-engineers. &#xd;&#xd;
The business functionality is extremely simplified.&#xd;
		</doc:purpose>
    </documentation>
    <operation name="rentCar">
      <input message="tns:rentCarRequest" name="rentCarRequest"/>
      <output message="tns:rentCarResponse" name="rentCarResponse"/>
      <fault message="tns:rentCarFault" name="rentCarFault"/>
    </operation>
    <operation name="returnCar">
      <input message="tns:returnCarRequest" name="returnCarRequest"/>
      <output message="tns:returnCarResponse" name="returnCarResponse"/>
      <fault message="tns:returnCarFault" name="returnCarFault"/>
    </operation>
    <operation name="noticeBoardMessage">
      <output message="tns:noticeBoardMessageResponse" name="noticeBoardMessageResponse"/>
    </operation>
    <operation name="addCar">
      <input message="tns:addCarRequest" name="addCarRequest"/>
      <output message="tns:addCarResponse" name="addCarResponse"/>
      <fault message="tns:addCarFault" name="addCarFault"/>
    </operation>
    <operation name="deleteCar">
      <input message="tns:deleteCarRequest" name="deleteCarRequest"/>
      <output message="tns:deleteCarResponse" name="deleteCarResponse"/>
      <fault message="tns:deleteCarFault" name="deleteCarFault"/>
    </operation>
    <operation name="listAllCars">
      <input message="tns:listAllCarsRequest" name="listAllCarsRequest"/>
      <output message="tns:listAllCarsResponse" name="listAllCarsResponse"/>
      <fault message="tns:listAllCarsFault" name="listAllCarsFault"/>
    </operation>
    <operation name="getCarInfo">
      <input message="tns:getCarInfoRequest" name="getCarInfoRequest"/>
      <output message="tns:getCarInfoResponse" name="getCarInfoResponse"/>
      <fault message="tns:getCarInfoFault" name="getCarInfoFault"/>
    </operation>
    <wsdl:operation name="oneWayTest">
      <wsdl:input message="pri:oneWayTestRequest"/>
    </wsdl:operation>
  </portType>
</wsdl:definitions>
