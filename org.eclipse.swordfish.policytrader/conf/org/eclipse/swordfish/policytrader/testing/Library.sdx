<?xml version="1.0" encoding="UTF-8"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<definitions 
	xmlns="http://schemas.xmlsoap.org/wsdl/" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:sdx="http://types.sopware.org/service/ServiceDescription/2.0" 
	xmlns:doc="http://types.sopware.org/service/Documentation/1.0" 
	xmlns:err="http://types.sopware.org/demos/GeneralObjects/ErrorHandling/1.0" 
	xmlns:svn="http://types.sopware.org/demos/Library/Common/1.0"
	xmlns:dpag="http://services.sopware.org/demos/Library/1.0" 
	targetNamespace="http://services.sopware.org/demos/Library/1.0">
	
	<documentation>
		<doc:revisionHistory current="rev_02">
			<doc:revision revisionNumber="0" id="rev_00" status="open">
				Document creation
			</doc:revision>
			<doc:revision revisionNumber="1" id="rev_01" status="open">
				Changed format to be SOP 2.0 compliant.
			</doc:revision>
			<doc:revision revisionNumber="2" id="rev_02" status="open">
				Fixed some bugs concerning namespaces, message formats, and documentation.
			</doc:revision>
		</doc:revisionHistory>
	</documentation>
	<types>
	
	<xsd:schema
	  xmlns="http://types.sopware.org/demos/GeneralObjects/ErrorHandling/1.0"
	  targetNamespace="http://types.sopware.org/demos/GeneralObjects/ErrorHandling/1.0"
	  elementFormDefault="unqualified">
			<xsd:annotation>
				<xsd:documentation>
					<creation date="2005-03-17"/>
					<Service Designer="TSD"/>
					<revision history=""/>
					<description>
			</description>
				</xsd:documentation>
			</xsd:annotation>
			<!-- Response in case of BadRequest: -->
			<xsd:element name="Exceptions" type="ExceptionFrame"/>
			<xsd:complexType name="ExceptionFrame">
				<xsd:sequence>
					<xsd:element name="Exception" type="ExceptionType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="success" type="xsd:boolean" use="optional" default="true"/>
			</xsd:complexType>
			<!-- ExceptionType Definition -->
			<xsd:complexType name="ExceptionType">
				<xsd:sequence>
					<xsd:element name="Parameter" type="ParameterType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="ServiceParticipant" type="ServiceParticipantType" use="required"/>
				<xsd:attribute name="DomainName" type="xsd:string" use="required"/>
				<xsd:attribute name="ServiceName" type="xsd:string" use="required"/>
				<xsd:attribute name="Version" type="xsd:string" use="required"/>
				<xsd:attribute name="Operation" type="xsd:string" use="required"/>
				<xsd:attribute name="ExceptionClass" type="ExceptionClassType" use="required"/>
				<xsd:attribute name="ExceptionID" type="ExceptionIDType" use="required"/>
				<xsd:attribute name="ExceptionText" type="ExceptionTextType" use="required"/>
				<xsd:attribute name="CAT_Severity" type="CAT_ITOLogLevel" use="required"/>
				<xsd:attribute name="hasBeenLogged" type="xsd:boolean" use="required"/>
				<xsd:attribute name="LogTargetList" type="xsd:string" use="optional"/>
				<!-- A comma seperated list of protocol locations, i.e.: 'ITO, file://c:/myapplication/application.log' -->
			</xsd:complexType>
			<xsd:simpleType name="ExceptionClassType">
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[A-Z]{1}[a-zA-Z0-9_]*Exception"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="ExceptionIDType">
				<xsd:restriction base="xsd:decimal">
					<xsd:totalDigits value="5" fixed="true"/>
					<xsd:minInclusive value="10000"/>
					<xsd:maxInclusive value="99999"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="ExceptionTextType">
				<xsd:restriction base="xsd:string">
					<xsd:maxLength value="256" fixed="false"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="ServiceParticipantType">
				<xsd:restriction base="xsd:string">
					<xsd:length value="9"/>
					<xsd:pattern value="[0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="CAT_ITOLogLevel">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="NORM"/>
					<xsd:enumeration value="WARN"/>
					<xsd:enumeration value="MINO"/>
					<xsd:enumeration value="MAJO"/>
					<xsd:enumeration value="CRIT"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="ParameterType">
				<xsd:attribute name="name" type="xsd:string" use="required"/>
				<xsd:attribute name="value" type="xsd:string" use="required"/>
				<xsd:attribute name="comment" type="xsd:string" use="optional"/>
				<!-- Name of parameter -->
				<!-- Value of parameter -->
				<!-- Comment of parameter (optional) -->
			</xsd:complexType>
		</xsd:schema>
	
		<xsd:schema
		  xmlns="http://types.sopware.org/demos/Library/Common/1.0"
		  targetNamespace="http://types.sopware.org/demos/Library/Common/1.0"
		  elementFormDefault="unqualified">
			<xsd:annotation>
				<xsd:documentation>
					<service name="Library"/>
					<creation date="2005-03-17"/>
					<Service Designer="TSD"/>
					<revision history=""/>
					<description>
						<!--Definition of common business objects of testdomain Library. It is used by test operations of the SOPware DevBox; 2003-06-30-->
					</description>
				</xsd:documentation>
			</xsd:annotation>
			<!--operation related complex types: -->
			<xsd:element name="ListOfBooks">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="unbounded" minOccurs="0" name="Book" type="BookType"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="SearchFor">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Publisher" type="LongNameType" minOccurs="0"/>
						<xsd:element name="AuthorLastName" type="NameType" minOccurs="0" maxOccurs="unbounded"/>
						<xsd:element name="ISBNNumber" type="ISBNType" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="createLending">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="ISBNNumber" type="ISBNType"/>
						<xsd:element name="DateOfBirth" type="DateType"/>
						<xsd:element name="ZIP" type="ZIPType"/>
						<xsd:element name="Borrowed" type="DateType"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!--complex types of business objects: -->
			<xsd:complexType name="StreetAddressType">
				<xsd:sequence>
					<xsd:element name="Street" type="StreetType" minOccurs="0"/>
					<xsd:element name="HouseNumber" type="HouseNumberType" minOccurs="0"/>
					<xsd:element name="ZIP" type="ZIPType"/>
					<xsd:element name="City" type="CityType" minOccurs="0"/>
					<xsd:element name="CountryID" type="IDType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="PersonType">
				<xsd:sequence>
					<xsd:element name="PersonID" type="IDType"/>
					<xsd:element name="LastName" type="NameType"/>
					<xsd:element name="FirstName" type="NameType"/>
					<xsd:element name="TitleID" type="IDType" minOccurs="0"/>
					<xsd:element name="SalutationID" type="IDType" minOccurs="0"/>
					<xsd:element name="DateOfBirth" type="DateType"/>
					<xsd:element name="EMail" type="MailToType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="BookType">
				<xsd:sequence>
					<xsd:element name="Title" type="LongNameType" maxOccurs="3"/>
					<xsd:element name="Author" type="PersonType" maxOccurs="unbounded"/>
					<xsd:element name="ISBN" type="ISBNType"/>
					<xsd:element name="Publisher" type="LongNameType" maxOccurs="unbounded"/>
					<xsd:element name="Year_published">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:length value="4"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<!-- for simplification only lastname of author-->
				</xsd:sequence>
			</xsd:complexType>
			<!--simple types of business objects: -->
			<xsd:simpleType name="ZIPType">
				<xsd:annotation>
					<xsd:documentation>Basistype for ZIP codes</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:maxLength value="10"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="CityType">
				<xsd:annotation>
					<xsd:documentation>Basistype for cities</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:maxLength value="35"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="StreetType">
				<xsd:annotation>
					<xsd:documentation>Basistype for streets</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:maxLength value="35"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="HouseNumberType">
				<xsd:annotation>
					<xsd:documentation>Basistype for house numbers</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:maxLength value="10"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="NameType">
				<xsd:annotation>
					<xsd:documentation>Basistype for names (firstname, lastname, ...)</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:whiteSpace value="collapse"/>
					<xsd:maxLength value="35"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="LongNameType">
				<xsd:annotation>
					<xsd:documentation>Basistype for long names (titles, publisher, ...)</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:whiteSpace value="collapse"/>
					<xsd:maxLength value="200"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="MailToType">
				<xsd:annotation>
					<xsd:documentation>Basistype for email-accounts</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:maxLength value="200"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="IDType">
				<xsd:restriction base="xsd:string">
					<xsd:maxLength value="11"/>
					<xsd:pattern value="[0-9]{1}[0-9]*"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="DateType">
				<xsd:restriction base="xsd:date"/>
			</xsd:simpleType>
			<xsd:simpleType name="ISBNType">
				<xsd:restriction base="xsd:string">
					<xsd:minLength value="1"/>
					<xsd:maxLength value="15"/>
					<xsd:pattern value="[0-9\-]*"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name="newBooks">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="ListDate" type="svn:DateType" />
						<xsd:element maxOccurs="unbounded" name="Book" type="svn:BookType"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:schema>
	</types>
	<message name="seekBookRequest">
		<part name="body" element="svn:SearchFor"/>
	</message>
	<message name="seekBookResponse">
		<part name="body" element="svn:ListOfBooks"/>
	</message>
	<message name="newBooksNotification">
		<part name="ListOfBooks" element="svn:newBooks"/>
	</message>
	<message name="createLendingRequest">
		<part name="Lending" element="svn:createLending"/>
	</message>
	<message name="seekBookError">
		<part name="Exception" element="err:Exceptions"/>
	</message>
	<portType name="Library"
	  sdx:status="design"
	  sr:tModelKey="uddi:sopware.org:Library"
	  xmlns:sr="http://types.sopware.org/registry/ServiceRegistry/1.0">
		<operation name="seekBook">
			<input message="dpag:seekBookRequest"/>
			<output message="dpag:seekBookResponse"/>
			<fault name="error" message="dpag:seekBookError"/>
		</operation>
		<operation name="newBooks">
			<output message="dpag:newBooksNotification"/>
		</operation>
		<operation name="createLending">
			<input message="dpag:createLendingRequest"/>
		</operation>
		<operation name="seekBookInBasement">
			<input message="dpag:seekBookRequest"/>
		</operation>
	</portType>
</definitions>
