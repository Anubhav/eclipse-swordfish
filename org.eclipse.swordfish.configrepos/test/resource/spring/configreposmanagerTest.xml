<?xml version="1.0" encoding="UTF-8"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <description>SOP Configuration Manager Spring Component: Unit Test</description>
    <!-- Setup placeholders of various setups -->
    <bean id="placeholder_test"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer"
        lazy-init="false">
        <property name="manager">
            <ref bean="manager"/>
        </property>
        <property name="jxPathContextFactory">
        	<ref bean="org.eclipse.swordfish.configrepos.springbeans.JXPathContextFactory"/>
        </property>
    </bean>
    <bean id="placeholder_managerwithid"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer"
        lazy-init="false">
        <property name="manager">
            <ref bean="manager_withid"/>
        </property>
        <property name="placeholderPrefix">
            <value>sbbid{</value>
        </property>
        <property name="jxPathContextFactory">
        	<ref bean="org.eclipse.swordfish.configrepos.springbeans.JXPathContextFactory"/>
        </property>
    </bean>
    <bean id="placeholder_config"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer"
        lazy-init="false">
        <property name="config">
            <ref bean="boot_config"/>
        </property>
        <property name="placeholderPrefix">
            <value>sbb_boot{</value>
        </property>
        <property name="jxPathContextFactory">
        	<ref bean="org.eclipse.swordfish.configrepos.springbeans.JXPathContextFactory"/>
        </property>
    </bean>
    <!-- A set of test string fetching configurations from different sources -->
    <bean name="aStringWithIdent" singleton="false" class="java.lang.String">
        <constructor-arg>
            <value>$sbb{Location=Bonn; PolicyRouter/PolicyExpiryCheck}</value>
        </constructor-arg>
    </bean>
    <bean name="aStringWithoutIdent" class="java.lang.String" lazy-init="true">
        <constructor-arg>
            <value>$sbbid{PolicyRouter/PolicyExpiryCheck}</value>
        </constructor-arg>
    </bean>
    <bean name="aStringFromBootConfig" singleton="false" class="java.lang.String">
        <constructor-arg>
            <value>$sbb_boot{Global/environment/conf-dir}</value>
        </constructor-arg>
    </bean>
    <bean name="aStringFromSystemProperties" singleton="false" class="java.lang.String">
        <constructor-arg>
            <value>$sbb_boot{user.dir}</value>
        </constructor-arg>
    </bean>
    <bean name="failsafe"
        class="org.eclipse.swordfish.configrepos.configuration.sources.FailsafeConfigurationSource"
        singleton="false"> </bean>
    <bean name="failsafe_withid"
        class="org.eclipse.swordfish.configrepos.configuration.sources.FailsafeConfigurationSource"
        singleton="false">
        <constructor-arg>
            <value>failsafe</value>
        </constructor-arg>
    </bean>
    <bean name="manager" parent="cfgmngr" singleton="false">
        <property name="defaultTreeQualifier">
            <value>SBB</value>
        </property>
    </bean>
    <bean name="manager_withid" parent="cfgmngr" singleton="false">
        <property name="fixedScopePath">
            <value>Location=Bonn</value>
        </property>
        <property name="defaultTreeQualifier">
            <value>SBB</value>
        </property>
    </bean>
    <bean name="manager_participant" parent="cfgmngr_sp" singleton="false"> </bean>
    <!-- 
        Test the bean factories 
    -->
    <bean id="collections_factory_cfg" name="collections_factory_cfg"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref bean="manager_withid"/>
        </property>
        <property name="targetMethod">
            <value>getConfiguration</value>
        </property>
        <property name="arguments">
            <list>
                <null/>
                <null/>
            </list>
        </property>
    </bean>
    <!--bean name="servicecomponenttestfactory"
        factory-bean="org.eclipse.swordfish.configrepos.spring.ConfiguredLocalServiceEndpointFactory"
        factory-method="createInstance"/-->
    <bean name="org.eclipse.swordfish.configrepos.spring.ConfiguredLocalServiceEndpointFactory"
        class="org.eclipse.swordfish.configrepos.spring.ConfiguredLocalServiceEndpointFactory">
        <property name="configuration" ref="boot_config"/>
        <property name="serviceBasePath" value="//LocalEndpoints/ProviderEndpoint/Service"/>
       	<property name="callbackBasePath" value="//LocalEndpoints/ConsumerEndpoint/CallbackService"/>
    </bean>
    <!--
        Create List from configuration
    -->
    <bean id="org.eclipse.swordfish.configrepos.spring.ConfigurationListFactoryBean"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationListFactoryBean">
        <property name="basePath" value="policy-processor/order/sender/request/processing-unit"/>
        <property name="configuration" ref="collections_factory_cfg"/>
    </bean>
    <!--
        Create double-stage map
    -->
    <!-- bean id="org.eclipse.swordfish.configrepos.spring.ConfigurationMapFactoryBean"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationMapFactoryBean">
        <property name="basePath"
            value="policy-processor/order/sender/request/processing-unit"/>
        <property name="keyPath" value="assertion/@value"/>
        <property name="configuration" ref="collections_factory_cfg"/>
    </bean-->
    <!--
        Create a simple map  
    -->
    <bean id="org.eclipse.swordfish.configrepos.spring.ConfigurationMapFactoryBean2"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationMapFactoryBean">
        <property name="basePath" value="policy-processor/order/sender/request/processing-unit"/>
        <property name="keyPath" value="assertion/@value"/>
        <property name="valuePath" value="component/@value"/>
        <property name="configuration" ref="collections_factory_cfg"/>
    </bean>
    <!--
        Create a special resource editor for handling SOP resources
    -->
    <bean id="customEditorConfigurer"
        class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="org.springframework.core.io.Resource">
                    <bean
                        class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryResourceEditor">
                        <property name="manager" ref="manager_withid"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    <bean name="sop_resource_using_bean" class="org.eclipse.swordfish.configrepos.mock.ResourceUsingMock">
        <property name="target" value="sopcr://SBB/compost/README.txt"/>
    </bean>
</beans>
