<?xml version="1.0" encoding="UTF-8"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "./spring-beans.dtd">

<!-- put all the instance related beans with their wiring into this file -->
<beans>
	<bean
		id="org.eclipse.swordfish.configrepos.spring.ReplaceFromPropFileAllowSysPropOverride"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:SBB/ConfigurationManager/bootdefaults_cfg.properties</value>
		</property>
		<property name="systemPropertiesMode" value="2" />
		<property name="placeholderPrefix" value="$sbb_sys{" />
		<property name="order" value="0"></property>
	</bean>
	<bean
		id="org.eclipse.swordfish.configrepos.spring.alias.BootConfigurationRepositoryPlaceholderConfigurer"
		class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer">
		<property name="placeholderPrefix" value="$sbb_boot{" />
		<property name="order" value="1" />
		<property name="config" ref="boot_config" />
		<property name="jxPathContextFactory">
			<ref
				bean="org.eclipse.swordfish.configrepos.springbeans.JXPathContextFactory" />
		</property>

	</bean>
	<bean
		id="org.eclipse.swordfish.configrepos.spring.alias.InstanceConfigurationRepositoryPlaceholderConfigurer"
		class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer">
		<property name="placeholderPrefix" value="$sbb_instance{" />
		<property name="config" ref="instance_cfg" />
		<property name="order" value="2" />
		<property name="jxPathContextFactory">
			<ref
				bean="org.eclipse.swordfish.configrepos.springbeans.JXPathContextFactory" />
		</property>
	</bean>

	<bean
		id="org.eclipse.swordfish.core.components.resolver.CompoundServiceDescriptionFactory"
		class="org.eclipse.swordfish.core.components.resolver.impl.CompoundServiceDescriptionFactoryBean"
		singleton="true" destroy-method="destroy">
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
		<property name="localEndpointRepository"
			ref="org.eclipse.swordfish.core.components.endpointmanager.LocalEndpointRepository" />
	</bean>

	<bean
		id="org.eclipse.swordfish.core.components.resolver.ServiceDescriptionResolver"
		class="org.eclipse.swordfish.core.components.resolver.impl.ServiceDescriptionResolverBean"
		singleton="true" destroy-method="destroy">
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
		<property name="srProxy"
			ref="org.eclipse.swordfish.core.components.srproxy.SrProxy" />
		<property name="csdFactory"
			ref="org.eclipse.swordfish.core.components.resolver.CompoundServiceDescriptionFactory" />
	</bean>

	<bean id="org.eclipse.swordfish.core.components.processing.PolicyRouter"
		class="org.eclipse.swordfish.core.components.processing.impl.PolicyRouterBean"
		singleton="true">
		<property name="srCache"
			ref="org.eclipse.swordfish.core.components.srproxy.SrProxyCache" />
		<property name="validator"
			ref="org.eclipse.swordfish.core.components.processing.PolicyValidator" />
		<property name="planner">
			<ref parent="org.eclipse.swordfish.core.components.planner.Planner" />
		</property>
		<property name="policyExpiryCheck">
			<value>$sbb_instance{PolicyRouter[./@sopcs:name='default']/PolicyExpiryCheck}</value>
		</property>
		<property name="policyExpiryGracePeriod">
			<value>$sbb_instance{PolicyRouter[./@sopcs:name='default']/PolicyExpiryGracePeriod}</value>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.processing.PolicyValidator"
		class="org.eclipse.swordfish.core.components.processing.impl.PolicyValidatorBean"
		init-method="init" singleton="true" destroy-method="destroy">
		<property name="policyResolver"
			ref="org.eclipse.swordfish.core.components.resolver.PolicyResolver" />
		<property name="policyCache"
			ref="org.eclipse.swordfish.core.components.processing.PolicyCache" />
		<property name="enabled">
			<value>$sbb_instance{PolicyRouter[./@sopcs:name='default']/PolicyExpiryCheck}</value>
		</property>
		<property name="validityDuration">
			<value>3600000</value>
			<!--value>$sbb_instance{PolicyResolver[./@sopcs:name='default']/@useDefaultConsumerPolicy}</value-->
		</property>
		<property name="exclusionList">
			<list>
				<value>{http://services.sopware.org/registry/ServiceRegistry/1.0}ServiceRegistry;xfind_participantPolicy</value>
				<value>{http://services.sopware.org/registry/ServiceRegistry/1.0}ServiceRegistry;xget_participantPolicy</value>
				<value>{http://services.sopware.org/registry/ServiceRegistry/1.0}ServiceRegistry;xget_wsPolicy</value>
			</list>
		</property>
		
	</bean>

	<bean id="org.eclipse.swordfish.core.components.resolver.PolicyResolver"
		class="org.eclipse.swordfish.core.components.resolver.impl.PolicyResolverBean">
		<property name="srProxy"
			ref="org.eclipse.swordfish.core.components.srproxy.SrProxy" />
		<property name="policyMap">
			<bean
				class="org.eclipse.swordfish.configrepos.spring.ConfigurationMapFactoryBean">
				<property name="basePath"
					value="PolicyResolver/PolicyMap/Policy" />
				<property name="keyPath" value="./@name" />
				<property name="valuePath" value="PolicyId" />
				<property name="configuration" ref="instance_cfg" />
			</bean>
		</property>
		<property name="defaultPolicyID">
			<value>http://types.sopware.org/qos/ParticipantPolicy/1.1/DefaultConsumerPolicy</value>
		</property>
		<property name="useDefaultConsumerPolicy">
			<value>$sbb_instance{PolicyResolver[./@sopcs:name='default']/@useDefaultConsumerPolicy}</value>
		</property>
		<property name="defaultConsumerPolicyName">
			<value>$sbb_instance{PolicyResolver[./@sopcs:name='default']/@defaultConsumerPolicyName}</value>
		</property>
		<property name="manager">
			<ref parent="sbb_instance_configmngr" />
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.srproxy.SrProxyCache"
		class="org.eclipse.swordfish.core.components.srproxy.impl.SrProxyCacheBean"
		init-method="init" singleton="true" destroy-method="destroy">
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
		<property name="baseDir" value="conf/serviceregistry" />
		<property name="mustHavePolicies" value="true" />

		<property name="registrySDX"
			value="classpath:SBB/ServiceRegistryManager/ServiceRegistry.sdx" />
		<property name="registrySPDX"
			value="classpath:SBB/ServiceRegistryManager/ServiceRegistryProvider.spdx" />
		<property name="registryAgreedPolicy"
			value="classpath:SBB/ServiceRegistryManager/ServiceRegistryProvider.agreedpolicy" />
		<property name="registryURL">
			<value>$sbb_boot{Participant[@sopcs:name='/']/ServiceRegistryManager/ServiceRegistryUrl}</value>
		</property>
		<property name="registrySecureURL">
			<value>$sbb_boot{Participant[@sopcs:name='/']/ServiceRegistryManager/ServiceRegistrySecureUrl}</value>
		</property>
		<property name="useSecureURL">
			<value>$sbb_boot{Participant[@sopcs:name='/']/ServiceRegistryManager/UseSecureUrl}</value>
		</property>
		<property name="enabled">
			<value>$sbb_instance{ServiceRegistryProxy[./@sopcs:name='default']/@cachingEnabled}</value>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.srproxy.SrProxy"
		class="org.eclipse.swordfish.core.components.srproxy.impl.SrProxyBean"
		init-method="init" singleton="true">
		<property name="cache"
			ref="org.eclipse.swordfish.core.components.srproxy.SrProxyCache" />
		<property name="srProviderServiceName"
			value="{http://services.sopware.org/registry/ServiceRegistryProvider/1.0}ServiceRegistryProvider" />
		<property name="srProviderPortType"
			value="{http://services.sopware.org/registry/ServiceRegistry/1.0}ServiceRegistry" />
		<property name="consumerProxy"
			ref="org.eclipse.swordfish.core.components.internalproxy.InternalProxy" />
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.monitor.MonitorProcessor"
		class="org.eclipse.swordfish.core.interceptor.monitor.impl.MonitoringProcessorBean">
		<property name="listener">
			<ref
				bean="org.eclipse.swordfish.core.management.notification.ManagementNotificationListener" />
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.correlation.CorrelationProcessor"
		class="org.eclipse.swordfish.core.interceptor.correlation.impl.CorrelationProcessorBean"
		singleton="true">
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.compression.CompressionProcessor"
		class="org.eclipse.swordfish.core.interceptor.compression.impl.CompressionProcessorBean"
		init-method="init" singleton="true">
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.priority.PriorityProcessor"
		class="org.eclipse.swordfish.core.interceptor.priority.impl.PriorityProcessorBean"
		singleton="true">
	</bean>

	<bean
		id="org.eclipse.swordfish.core.interceptor.authentication.AuthenticationProcessor"
		class="org.eclipse.swordfish.core.interceptor.authentication.impl.AuthenticationProcessorBean"
		init-method="init" singleton="true">
		<property name="assertionCache"
			ref="org.eclipse.swordfish.security.assertionCache" />
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
		<property name="credentialLoginType">
			<value>$sbb_instance{AuthenticationProcessor/CredentialLoginType}</value>
		</property>
		<property name="assertionLoginType">
			<value>$sbb_instance{AuthenticationProcessor/AssertionLoginType}</value>
		</property>
		<property name="ldapURL">
			<value>$sbb_instance{AuthenticationProcessor/LdapURL}</value>
		</property>
		<property name="jaasConfigFile">
			<value>$sbb_instance{AuthenticationProcessor/JAASConfigFile}</value>
		</property>
		<property name="baseDir" value="conf/authentication" />
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.authorization.AuthorizationProcessor"
		class="org.eclipse.swordfish.core.interceptor.authorization.impl.AuthorizationProcessorBean"
		init-method="init" singleton="true">
		<property name="assertionCache"
			ref="org.eclipse.swordfish.security.assertionCache" />
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
		<property name="internalProxy"
			ref="org.eclipse.swordfish.core.components.internalproxy.InternalProxy" />
		<property name="expiryClearance">
			<value>$sbb_instance{AuthorizationProcessor[./@sopcs:name='default']/ExpiryClearance}</value>
		</property>
		<property name="keyStoreFile" value="store.jks" />
		<property name="keyStoreType" value="JKS" />
		<property name="keyStorePassword">
			<value>$sbb_instance{AuthorizationProcessor/KeystorePassword}</value>
		</property>
		<property name="resourceMapperClass" value="" />
		<property name="authorizationOperationName" value="authorize" />
		<property name="authorizationServiceName"
			value="{http://services.sopware.org/security/Authorization/1.0}Authorization" />
		<property name="authorizationServicePolicyID"
			value="StandardPolicy" />
		<property name="clientExpiry">
			<value>$sbb_instance{AuthorizationProcessor[./@sopcs:name='default']/ClientExpiry}</value>
		</property>
		<property name="clientVerification">
			<value>$sbb_instance{AuthorizationProcessor[./@sopcs:name='default']/ClientVerification}</value>
		</property>
		<property name="baseDir" value="conf/authorization" />
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.extension.PayloadHandlingProcessor"
		class="org.eclipse.swordfish.core.interceptor.extension.impl.PayloadHandlingProcessorBean">
		<property name="uuidGenerator">
			<ref parent="org.eclipse.swordfish.core.components.helpers.UUIDGenerator" />
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.internalproxy.InternalProxy"
		class="org.eclipse.swordfish.core.components.internalproxy.impl.InternalProxyBean"
		singleton="true" destroy-method="destroy">
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
		<property name="policyRouter"
			ref="org.eclipse.swordfish.core.components.processing.PolicyRouter" />
		<property name="headerProcessor"
			ref="org.eclipse.swordfish.core.components.headerprocessing.HeaderProcessor" />
		<property name="infrastructureUsername">
			<value>$sbb_instance{InternalProxy[./@sopcs:name='default']/InfrastructureUsername}</value>
		</property>
		<property name="infrastructurePassword">
			<value>$sbb_instance{InternalProxy[./@sopcs:name='default']/InfrastructurePassword}</value>
		</property>
		<property name="infrastructurePolicyId">
			<value>http://types.sopware.org/qos/ParticipantPolicy/1.1/StandardTspConsumer</value>
		</property>
		<property name="requestResponseServiceOperationProxy">
			<bean
				class="org.eclipse.swordfish.core.components.internalproxy.impl.RequestResponseServiceOperationProxyBean">
				<property name="deliveryChannelSender"
					ref="org.eclipse.swordfish.core.components.messaging.DeliveryChannelSender" />
			</bean>
		</property>
		<property name="onewayServiceOperationProxy">
			<bean
				class="org.eclipse.swordfish.core.components.internalproxy.impl.OnewayServiceOperationProxyBean">
				<property name="deliveryChannelSender"
					ref="org.eclipse.swordfish.core.components.messaging.DeliveryChannelSender" />
			</bean>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.validation.ValidationProcessor"
		class="org.eclipse.swordfish.core.interceptor.validation.impl.ValidationProcessorBean"
		singleton="true" init-method="init">
		<property name="serviceDescriptionResolver"
			ref="org.eclipse.swordfish.core.components.resolver.ServiceDescriptionResolver" />
		<property name="schemaCache"
			ref="org.eclipse.swordfish.core.components.validation.ValidationSchemaCache" />
		<property name="configurationManager">
			<ref parent="sbb_instance_configmngr" />
		</property>
	</bean>

	<bean
		id="org.eclipse.swordfish.core.interceptor.transformation.TransformationProcessor"
		class="org.eclipse.swordfish.core.interceptor.transformation.impl.TransformationProcessorBean"
		singleton="true" init-method="init">
		<property name="configurationManager">
			<ref parent="sbb_instance_configmngr" />
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.sticker.StickerProcessor"
		class="org.eclipse.swordfish.core.interceptor.sticker.impl.StickerProcessorBean"
		singleton="true">
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.signing.SigningProcessor"
		class="org.eclipse.swordfish.core.interceptor.signing.impl.SigningProcessorBean"
		init-method="init" singleton="true">
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
		<property name="baseDir" value="conf/signing" />
		<property name="keyStoreFile">
			<value>$sbb_instance{SigningProcessor/KeyStoreFile}</value>
		</property>
		<property name="keyStoreType" value="JKS" />
		<property name="keyStorePassword">
			<value>$sbb_instance{SigningProcessor/KeyStorePassword}</value>
		</property>
		<property name="keyAlias">
		<value>$sbb_instance{SigningProcessor/KeyAlias}</value>
		</property>
		<property name="keyPassword">
			<value>$sbb_instance{SigningProcessor/KeyPassword}</value>
		</property>
		<property name="certificateAlias">
			<value>$sbb_instance{SigningProcessor/certificateAlias}</value>
		</property>
		<property name="signatureMethod">
			<value>$sbb_instance{SigningProcessor/signatureMethod}</value>
		</property>
		<property name="internalProxy"
			ref="org.eclipse.swordfish.core.components.internalproxy.InternalProxy" />
		<property name="xkmsServiceName"
			value="{http://services.sopware.org/security/Xkms/1.0}Xkms" />
		<property name="checkCertificateValidity">
			<value>$sbb_instance{SigningProcessor/CheckCertificateValidity}</value>
		</property>
		<property name="checkCertificateIssuerTrust">
			<value>$sbb_instance{SigningProcessor/CheckCertificateIssuerTrust}</value>
		</property>
		<property name="checkCertificateSignature">
			<value>$sbb_instance{SigningProcessor/CheckCertificateSignature}</value>
		</property>
		<property name="checkCertificateRevocation">
			<value>$sbb_instance{SigningProcessor/CheckCertificateRevocation}</value>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.encryption.EncryptionProcessor"
		class="org.eclipse.swordfish.core.interceptor.encryption.impl.EncryptionProcessorBean"
		init-method="init" singleton="true">
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
		<property name="baseDir" value="conf/signing" />
		<property name="keyStoreFile">
			<value>$sbb_instance{EncryptionProcessor/KeyStoreFile}</value>
		</property>
		<property name="keyStoreType" value="JKS" />
		<property name="keyStorePassword">
			<value>$sbb_instance{EncryptionProcessor/KeyStorePassword}</value>
		</property>
		<property name="keyAlias">
			<value>$sbb_instance{EncryptionProcessor/KeyAlias}</value>
		</property>
		<property name="keyPassword">
			<value>$sbb_instance{EncryptionProcessor/KeyPassword}</value>
		</property>
		<property name="certificateAlias">
			<value>$sbb_instance{EncryptionProcessor/certificateAlias}</value>
		</property>
		<property name="internalProxy"
			ref="org.eclipse.swordfish.core.components.internalproxy.InternalProxy" />
		<property name="xkmsServiceName"
			value="{http://services.sopware.org/security/Xkms/1.0}Xkms" />
		<property name="symmetricKeySize">
			<value>$sbb_instance{EncryptionProcessor/symmetricKeySize}</value>
		</property>
		<property name="symmetricKeyAlgorithm">
			<value>$sbb_instance{EncryptionProcessor/symmetricKeyAlgorithm}</value>
		</property>
		<property name="algorithmToEncryptSymmetricKey">
			<value>$sbb_instance{EncryptionProcessor/algorithmToEncryptSymmetricKey}</value>
		</property>
		<property name="dataEncryptionAlgorithm">
			<value>$sbb_instance{EncryptionProcessor/dataEncryptionAlgorithm}</value>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.tracking.TrackingProcessor"
		class="org.eclipse.swordfish.core.interceptor.tracking.impl.TrackingProcessorBean"
		singleton="true">
		<property name="listener"
			ref="org.eclipse.swordfish.core.management.notification.ManagementNotificationListener" />
	</bean>

	<bean id="org.eclipse.swordfish.core.interceptor.monitor.MonitoringProcessor"
		class="org.eclipse.swordfish.core.interceptor.monitor.impl.MonitoringProcessorBean"
		singleton="true">
		<property name="listener"
			ref="org.eclipse.swordfish.core.management.notification.ManagementNotificationListener" />
	</bean>

	<bean id="org.eclipse.swordfish.core.components.iapi.Kernel"
		class="org.eclipse.swordfish.core.components.iapi.impl.KernelBean"
		init-method="init" destroy-method="destroy" singleton="true">
		<property name="componentContextAccess">
			<ref
				parent="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
		</property>
		<property name="endpointManager">
			<ref
				parent="org.eclipse.swordfish.core.components.endpointmanager.EndpointManager" />
		</property>
		<property name="endpointReferenceResolver">
			<ref
				parent="org.eclipse.swordfish.core.components.endpointreferenceresolver.EndpointReferenceResolver" />
		</property>
		<property name="handlerRegistry"
			ref="org.eclipse.swordfish.core.components.handlerregistry.HandlerRegistry" />
		<property name="sdResolver"
			ref="org.eclipse.swordfish.core.components.resolver.ServiceDescriptionResolver" />
		<property name="policyResolver"
			ref="org.eclipse.swordfish.core.components.resolver.PolicyResolver" />
		<property name="commandFactory"
			ref="org.eclipse.swordfish.core.components.command.CommandFactory" />
		<property name="managementNotificationListener">
			<ref
				bean="org.eclipse.swordfish.core.management.notification.ManagementNotificationListener" />
		</property>
		<property name="policyRouter"
			ref="org.eclipse.swordfish.core.components.processing.PolicyRouter" />
		<property name="contextStore"
			ref="org.eclipse.swordfish.core.components.contextstore.ContextStore" />
		<property name="uuidGenerator">
			<ref parent="org.eclipse.swordfish.core.components.helpers.UUIDGenerator" />
		</property>
		<property name="instrumentationManager"
			ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager" />
		<property name="httpClientConfiguration">
			<ref
				parent="org.eclipse.swordfish.core.components.helpers.HttpClientConfiguration" />
		</property>
		<property name="localEndpointRepository"
			ref="org.eclipse.swordfish.core.components.endpointmanager.LocalEndpointRepository" />

		<property name="locationId">
			<value>$sbb_boot{Participant[@sopcs:name='/']/ConfigurationRepositoryManager/Location}</value>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.handlerregistry.HandlerRegistry"
		class="org.eclipse.swordfish.core.components.handlerregistry.impl.HandlerRegistryBean"
		singleton="true" destroy-method="destroy" />

	<!--
		Messaging related Beans
	-->
	<bean id="org.eclipse.swordfish.core.components.command.CommandFactory"
		class="org.eclipse.swordfish.core.components.command.impl.CommandFactoryBean" />
	<bean id="org.eclipse.swordfish.core.components.command.InOutCommand"
		class="org.eclipse.swordfish.core.components.command.impl.InOutCommandBean"
		singleton="false">
		<property name="deliveryChannelSender">
			<ref
				parent="org.eclipse.swordfish.core.components.messaging.DeliveryChannelSender" />
		</property>
		<property name="kernel">
			<ref bean="org.eclipse.swordfish.core.components.iapi.Kernel" />
		</property>
	</bean>
	<bean id="org.eclipse.swordfish.core.components.command.InOnlyCommand"
		class="org.eclipse.swordfish.core.components.command.impl.InOnlyCommandBean"
		singleton="false">
		<property name="deliveryChannelSender">
			<ref
				parent="org.eclipse.swordfish.core.components.messaging.DeliveryChannelSender" />
		</property>
		<property name="kernel">
			<ref bean="org.eclipse.swordfish.core.components.iapi.Kernel" />
		</property>
	</bean>
	<bean id="org.eclipse.swordfish.core.components.command.CallbackCommand"
		class="org.eclipse.swordfish.core.components.command.impl.CallbackCommandBean"
		singleton="false">
		<property name="deliveryChannelSender">
			<ref
				parent="org.eclipse.swordfish.core.components.messaging.DeliveryChannelSender" />
		</property>
		<property name="kernel">
			<ref bean="org.eclipse.swordfish.core.components.iapi.Kernel" />
		</property>
	</bean>
	<!-- 
		sbb-configrepos-proxy instance specific bean definitions 
	-->
	<bean id="instance_cfg" name="instance_cfg"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<ref parent="sbb_instance_configmngr" />
		</property>
		<property name="targetMethod">
			<value>getConfiguration</value>
		</property>
		<property name="arguments">
			<list>
				<null />
				<null />
			</list>
		</property>
	</bean>
	<!-- 
		Management beans
	-->
	<bean id="org.eclipse.swordfish.core.management.ObjectNameFactory"
		class="org.eclipse.swordfish.core.management.objectname.ObjectNameFactory"
		destroy-method="destroy">
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
	</bean>
	<!-- Listerner to receive management notifications -->
	<bean
		id="org.eclipse.swordfish.core.management.notification.ManagementNotificationListener"
		class="org.eclipse.swordfish.core.management.notification.impl.ManagementNotificationListenerBean"
		singleton="true" init-method="init" destroy-method="destroy">
		<property name="managementController"
			ref="org.eclipse.swordfish.core.management.components.ManagementController" />
		<property name="processingInterval">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/ManagementNotificationListener/ProcessingInterval}</value>
		</property>
		<property name="directProcessing">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/ManagementNotificationListener/DirectProcessing}</value>
		</property>
		<property name="notificationProcessors">
			<list>
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.MessagingMonitor" />
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.OperationRegistration" />
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.ServiceRegistration" />
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.ParticipantRegistration" />
			</list>
		</property>
		<property name="managementTimer"
			ref="org.eclipse.swordfish.core.management.ManagementTimer" />
	</bean>
	<!-- Messaging monitors -->

	<bean id="org.eclipse.swordfish.core.management.messaging.OperationRegistration"
		class="org.eclipse.swordfish.core.management.messaging.impl.OperationRegistrationBean"
		destroy-method="destroy">
		<property name="factory"
			ref="org.eclipse.swordfish.core.management.messaging.OperationMonitorBackendFactory" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.messaging.ParticipantRegistration"
		class="org.eclipse.swordfish.core.management.messaging.impl.ParticipantRegistrationBean"
		destroy-method="destroy">
		<property name="factory"
			ref="org.eclipse.swordfish.core.management.messaging.ParticipantMonitorBackendFactory" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.messaging.ServiceRegistration"
		class="org.eclipse.swordfish.core.management.messaging.impl.ServiceRegistrationBean"
		destroy-method="destroy">
		<property name="factory"
			ref="org.eclipse.swordfish.core.management.messaging.ServiceMonitorBackendFactory" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.messaging.MessagingMonitor"
		class="org.eclipse.swordfish.core.management.messaging.impl.MessagingMonitorBean"
		destroy-method="destroy">
		<property name="backendFactories">
			<list>
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.SbbMonitorBackendFactory" />
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.OperationMonitorBackendFactory" />
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.ServiceMonitorBackendFactory" />
				<ref
					bean="org.eclipse.swordfish.core.management.messaging.ParticipantMonitorBackendFactory" />
			</list>
		</property>
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.messaging.MessagingTracerFactory"
		class="org.eclipse.swordfish.core.management.messaging.impl.MessagingTracerFactoryBean"
		lazy-init="true" destroy-method="destroy">
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
	</bean>

	<bean
		id="org.eclipse.swordfish.core.management.messaging.OperationMonitorBackendFactory"
		class="org.eclipse.swordfish.core.management.messaging.impl.OperationMonitorBackendFactoryBean"
		destroy-method="destroy">
		<property name="objectNameFactory"
			ref="org.eclipse.swordfish.core.management.ObjectNameFactory" />
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
		<property name="managementTimer"
			ref="org.eclipse.swordfish.core.management.ManagementTimer" />
		<property name="instrumentationManager"
			ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.messaging.ServiceMonitorBackendFactory"
		class="org.eclipse.swordfish.core.management.messaging.impl.ServiceMonitorBackendFactoryBean"
		destroy-method="destroy">
		<property name="objectNameFactory"
			ref="org.eclipse.swordfish.core.management.ObjectNameFactory" />
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
		<property name="instrumentationManager"
			ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager" />
	</bean>

	<bean
		id="org.eclipse.swordfish.core.management.messaging.ParticipantMonitorBackendFactory"
		class="org.eclipse.swordfish.core.management.messaging.impl.ParticipantMonitorBackendFactoryBean"
		destroy-method="destroy">
		<property name="objectNameFactory"
			ref="org.eclipse.swordfish.core.management.ObjectNameFactory" />
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
		<property name="instrumentationManager"
			ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager" />
		<property name="sbbMonitorBackendFactory"
			ref="org.eclipse.swordfish.core.management.messaging.SbbMonitorBackendFactory" />
	</bean>

	<bean
		id="org.eclipse.swordfish.core.management.messaging.impl.ResponseTimeMonitoringBackend"
		class="org.eclipse.swordfish.core.management.messaging.impl.ResponseTimeMonitoringBackend"
		destroy-method="destroy" singleton="false">
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
		<property name="managementTimer"
			ref="org.eclipse.swordfish.core.management.ManagementTimer" />
		<property name="notificationListener"
			ref="org.eclipse.swordfish.core.management.notification.ManagementNotificationListener" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.messaging.impl.MessageTrackingBackend"
		class="org.eclipse.swordfish.core.management.messaging.impl.MessageTrackingBackend"
		destroy-method="destroy" singleton="false">
		<property name="operations"
			ref="org.eclipse.swordfish.core.management.operations.Operations" />
	</bean>
	<!-- PAPI extensions -->
	<!-- Instrumentation -->
	<bean
		id="org.eclipse.swordfish.papi.internal.extension.instrumentation.InternalInstrumentationManager"
		class="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManagerProxyFactory"
		lazy-init="true" destroy-method="destroy" />

	<bean
		id="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManagerExternal"
		class="org.eclipse.swordfish.core.management.instrumentation.impl.InstrumentationManagerBean"
		singleton="true" destroy-method="destroy">
		<property name="objectNameFactory"
			ref="org.eclipse.swordfish.core.management.ObjectNameFactory" />
		<property name="mbeanServer">
			<ref parent="mbeanServer" />
		</property>
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
		<property name="specifier" value="participant" />
		<property name="managedObjects"
			ref="org.eclipse.swordfish.core.management.instrumentation.ManagedObjects" />
	</bean>

	<bean id="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"
		class="org.eclipse.swordfish.core.management.instrumentation.impl.InstrumentationManagerBean"
		singleton="true" destroy-method="destroy">
		<property name="objectNameFactory"
			ref="org.eclipse.swordfish.core.management.ObjectNameFactory" />
		<property name="mbeanServer">
			<ref parent="mbeanServer" />
		</property>
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
		<property name="managedObjects"
			ref="org.eclipse.swordfish.core.management.instrumentation.ManagedObjects" />
	</bean>
	<!-- Monitorable -->
	<bean
		id="org.eclipse.swordfish.papi.internal.extension.instrumentation.InternalParticipantMonitor"
		class="org.eclipse.swordfish.core.management.instrumentation.ParticipantMonitorFactory"
		lazy-init="true" destroy-method="destroy">
		<property name="objectNameFactory"
			ref="org.eclipse.swordfish.core.management.ObjectNameFactory" />
		<property name="instrumentationManager"
			ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager" />
	</bean>
	<!-- Operations -->
	<bean id="org.eclipse.swordfish.papi.internal.extension.operations.InternalOperations"
		class="org.eclipse.swordfish.core.management.operations.OperationsProxyFactory"
		destroy-method="destroy" />

	<bean id="org.eclipse.swordfish.core.management.operations.Operations"
		init-method="init" destroy-method="destroy"
		class="org.eclipse.swordfish.core.management.operations.impl.OperationsBean"
		singleton="true">
		<property name="kernel"
			ref="org.eclipse.swordfish.core.components.iapi.Kernel" />
		<property name="handlers">
			<list>
				<value>org.eclipse.swordfish.mangement.NrPublisher</value>
				<value>org.eclipse.swordfish.core.management.FileLogger</value>
				<value>org.eclipse.swordfish.core.management.SnmpPublisher</value>
			</list>
		</property>
		<property name="filters">
			<map>
				<entry>
					<key>
						<value>org.eclipse.swordfish.core.management.operations</value>
					</key>
					<value>INFO</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.management.operations.ProxyRelay"
		class="org.eclipse.swordfish.core.management.operations.impl.ProxyRelayBean"
		init-method="init" destroy-method="destroy">
		<property name="internalProxy"
			ref="org.eclipse.swordfish.core.components.internalproxy.InternalProxy" />
		<property name="sbbPublisherBackend"
			ref="org.eclipse.swordfish.core.management.SbbPublisherBackend" />
	</bean>

	<!-- 
		JNDI Context Store, TODO put the values into the config store.
	-->
	<bean id="org.eclipse.swordfish.core.components.contextstore.ContextStore"
		class="org.eclipse.swordfish.core.components.contextstore.impl.ContextStoreFactory"
		init-method="init" destroy-method="destroy">
		<property name="initialFactory"
			value="com.sun.jndi.ldap.LdapCtxFactory" />
		<property name="storeType">
			<value>$sbb_instance{ContextStore[./@sopcs:name='default']/StoreType}</value>
		</property>
		<property name="providerURL">
			<value>$sbb_instance{ContextStore[./@sopcs:name='default']/LdapURL}</value>
		</property>
		<property name="userDN">
			<value>$sbb_instance{ContextStore/LdapUser}</value>
		</property>
		<property name="credentials">
			<value>$sbb_instance{ContextStore/LdapPassword}</value>
		</property>
	</bean>

	<!-- In-memory version for testing, disabled on purpose -->
	<!-- bean id="org.eclipse.swordfish.core.components.contextstore.ContextStore"
		class="org.eclipse.swordfish.core.components.contextstore.impl.InMemoryContextStoreBean"
		init-method="init" destroy-method="destroy"> </bean -->


	<!-- 
		Locator related beans that are tied to the instance
	-->

	<bean
		id="org.eclipse.swordfish.core.components.locatorproxy.LocatorProxyInstanceConfigurer"
		class="org.eclipse.swordfish.core.components.locatorproxy.impl.IonaLocatorProxyInstanceConfigurerBean"
		init-method="init" destroy-method="destroy">
		<property name="locationList">
			<bean
				id="org.eclipse.swordfish.configrepos.spring.ConfigurationListFactoryBean"
				class="org.eclipse.swordfish.configrepos.spring.ConfigurationListFactoryBean">
				<property name="basePath">
					<value>/LocatorLocations/Location/@name</value>
				</property>
				<property name="configuration" ref="instance_cfg" />
			</bean>
		</property>
		<property name="locatorProxy">
			<ref
				parent="org.eclipse.swordfish.core.components.locatorproxy.LocatorProxy" />
		</property>
		<property name="configManager">
			<ref parent="sbb_instance_configmngr" />
		</property>
	</bean>

	<bean
		id="org.eclipse.swordfish.core.components.endpointmanager.LocalEndpointRepository"
		class="org.eclipse.swordfish.core.components.endpointmanager.impl.LocalEndpointRepositoryBean"
		init-method="init" destroy-method="destroy">
		<property name="serviceList">
			<bean
				name="org.eclipse.swordfish.configrepos.spring.ConfiguredLocalServiceEndpointFactory"
				class="org.eclipse.swordfish.configrepos.spring.ConfiguredLocalServiceEndpointFactory">
				<property name="serviceBasePath"
					value="//LocalEndpoints/ProviderEndpoint/Service" />
				<property name="callbackBasePath"
					value="//LocalEndpoints/ConsumerEndpoint/CallbackService" />
				<property name="configuration" ref="instance_cfg" />
			</bean>
		</property>
	</bean>

</beans>
