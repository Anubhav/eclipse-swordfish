<?xml version="1.0" encoding="UTF-8"?>
<!--============================================================================
    Copyright (c) 2007 Deutsche Post AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
    
    Contributors:
       Deutsche Post AG - initial API and implementation
 ============================================================================-->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "./spring-beans.dtd">

<!-- put all the engine related beans with their wiring into this file -->
<beans>
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>ConfigReposMessageBundle</value>
            </list>
        </property>
    </bean>    
    <!-- sbb-configrepos-proxy bean definitions -->
    <bean id="org.eclipse.swordfish.configrepos.spring.ReplaceFromPropFileAllowSysPropOverride" 
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location"><value>classpath:SBB/ConfigurationManager/bootdefaults_cfg.properties</value></property>
        <property name="systemPropertiesMode" value="2"/>
        <property name="placeholderPrefix" value="$sbb_sys{"/>
        <property name="order" value="0"/> 
    </bean>
    <bean id="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer_sbb"
        class="org.eclipse.swordfish.configrepos.spring.ConfigurationRepositoryPlaceholderConfigurer">
        <property name="placeholderPrefix" value="$sbb_boot{"/>
        <property name="config" ref="boot_config" />
        <property name="order" value="1"/>
        <property name="jxPathContextFactory">
        	<ref bean="org.eclipse.swordfish.configrepos.springbeans.JXPathContextFactory"/>
        </property>
        
    </bean>
    <bean name="sbb_workdirectory" class="java.lang.String">
        <constructor-arg index="0" type="java.lang.String">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="org.eclipse.swordfish.configrepos.util.ConfigReposJBIUtil" />
                <property name="targetMethod" value="composeJBIWorkspaceDirectory" />
                <property name="arguments">
                    <list>
                        <value type="java.lang.String">file://</value>
                        <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
                            <property name="targetObject" ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess" />
                            <property name="propertyPath" value="workspaceRoot" />
                            <property name="resultType" value="java.lang.String" />
                        </bean>
                        <value type="java.lang.String">conf</value>
                    </list>
                </property>
            </bean>
        </constructor-arg>
    </bean>
    <bean name="sp_workdirectory" class="java.lang.String">
        <constructor-arg type="java.lang.String">
            <value>classpath:./conf</value>
        </constructor-arg>
    </bean>
    <import resource="classpath:crmngrbeans_bootstrap.xml"/>
    <bean id="org.eclipse.swordfish.configrepos.spring.ConfigReposProxyInstrumentationPostProcessor_sbb"
        class="org.eclipse.swordfish.core.components.configrepos.impl.ConfigReposProxyInstrumentationPostProcessor"/>
    <bean id="org.eclipse.swordfish.configrepos.spring.InstrumentedConfigurationManagerInternal_base"
        class="org.eclipse.swordfish.core.components.configrepos.instrumentation.InstrumentedConfigurationManagerInternal"
        singleton="false">
        <constructor-arg type="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"
            ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"/>
        <property name="definition"
            value="classpath:org/eclipse/swordfish/configrepos/instrumentation/sbb-configrepos-proxy-configurationrepositorymanager.xml"
        />
    </bean>
    <!-- 
	  		core stuff
	-->
	
	<bean id="org.eclipse.swordfish.core.components.instancemanager.InstanceManager"
		class="org.eclipse.swordfish.core.components.instancemanager.impl.InstanceManagerBean" singleton="true"/>
	
	<bean id="org.eclipse.swordfish.core.components.iapi.InternalSBBFactory"
		class="org.eclipse.swordfish.core.components.iapi.impl.InternalSBBFactoryBean" singleton="true">
		<property name="instanceManager"
			ref="org.eclipse.swordfish.core.components.instancemanager.InstanceManager"/>
	</bean>
	
	<bean id="org.eclipse.swordfish.papi.adapter.InternalSBBFactoryAdapter"
		class="org.eclipse.swordfish.papi.adapter.InternalSBBFactoryAdapterBean" singleton="true">
		<constructor-arg type="java.lang.String" value="sbb/internal:type=InternalSBBFactory" />
	</bean>
	
	<bean id="org.eclipse.swordfish.core.components.planner.Planner"
		class="org.eclipse.swordfish.core.components.planner.impl.PlannerBean" singleton="true" init-method="init" destroy-method="destroy">
		<property name="context" ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.helpers.UUIDGenerator" 
          class="org.eclipse.swordfish.core.components.helpers.impl.Version4UUIDGeneratorBean" singleton="true" init-method="init"/>

	<bean id="org.eclipse.swordfish.core.components.helpers.HttpClientConfiguration" 
          class="org.eclipse.swordfish.core.components.helpers.impl.HttpClientConfigurationBean" singleton="true">
		<property name="connectionTimeout">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/connectionTimeout}</value>
		</property>	
		<property name="httpProxyEnable">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/httpProxyEnable}</value>
		</property>	
		<property name="httpProxyHost">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/httpProxyHost}</value>
		</property>	
		<property name="httpProxyPort">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/httpProxyPort}</value>
		</property>	
		<property name="httpProxyUsername">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/httpProxyUsername}</value>
		</property>	
		<property name="httpProxyPassword">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/httpProxyPassword}</value>
		</property>	
		<property name="sslKeystore">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/sslKeystore}</value>
		</property>	
		<property name="sslKeystorePassword">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/sslKeystorePassword}</value>
		</property>	
		<property name="sslTruststore">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/sslTruststore}</value>
		</property>
		<property name="sslHostnameVerification">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/sslHostnameVerification}</value>
		</property>	
		<property name="baseDir">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/HttpClientConfiguration/baseDir}</value>
		</property>	
		<property name="componentContextAccess">
			<ref parent="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
		</property>
	</bean>
	
	<bean id="org.eclipse.swordfish.core.components.helpers.JMSClientConfiguration" 
          class="org.eclipse.swordfish.core.components.helpers.impl.JMSClientConfigurationBean" singleton="true">
		<property name="connectionTimeout">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/JMSClientConfiguration/connectionTimeout}</value>
		</property>	
	</bean>	
	
	<!--
        Header Processor
    -->
    <bean id="org.eclipse.swordfish.core.components.headerprocessing.HeaderProcessor" 
        class="org.eclipse.swordfish.core.components.headerprocessing.impl.HeaderProcessorBean" 
        init-method="init" singleton="true">
		<property name="uuidGenerator" ref="org.eclipse.swordfish.core.components.helpers.UUIDGenerator"/>
    </bean>   
	
	<!-- 
 			End Point Manager
	-->
	<bean id="org.eclipse.swordfish.core.components.endpointmanager.EndpointManager" init-method="init" destroy-method="destroy"
		class="org.eclipse.swordfish.core.components.endpointmanager.impl.EndpointManagerBean" singleton="true">
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
		<property name="dynamicEndpointHandler"
			ref="org.eclipse.swordfish.core.components.dynamicendpointhandler.DynamicEndpointHandler"/>
		<!-- <property name="instrumentationManager"
			ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"/>
		-->
	</bean>

	<bean id="org.eclipse.swordfish.core.components.dynamicendpointhandler.SuperBCAdapter"
		class="org.eclipse.swordfish.core.components.dynamicendpointhandler.impl.SuperBCAdapterBean"
		singleton="true">
		<property name="mbeanServer" ref="mbeanServer"/>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.dynamicendpointhandler.DynamicEndpointHandler"
		class="org.eclipse.swordfish.core.components.dynamicendpointhandler.impl.DynamicEndpointHandlerBean"
		singleton="true" destroy-method="destroy">
		<property name="mbeanServer" ref="mbeanServer"/>
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
		<property name="locatorProxy" 
			ref="org.eclipse.swordfish.core.components.locatorproxy.LocatorProxy" />	
		<property name="bindingProcessingTimeout">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/DeliveryChannelListenerBean/bindingProcessingTimeout}</value>
		</property>	
		<property name="bcAdapterMapping">
			<map>
				<entry>
					<key><value>jbi:ComponentName=oracle.tip.jbi.component.SuperBC,ControlType=Lifecycle</value></key>
					<value>org.eclipse.swordfish.core.components.dynamicendpointhandler.SuperBCAdapter</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.endpointreferenceresolver.EndpointReferenceResolver"
		class="org.eclipse.swordfish.core.components.endpointreferenceresolver.impl.WSAEndpointReferenceResolverBean"
		singleton="true">
		<property name="endpointManager"
			ref="org.eclipse.swordfish.core.components.endpointmanager.EndpointManager"/>
		<property name="locatorProxy"
			ref="org.eclipse.swordfish.core.components.locatorproxy.LocatorProxy"/>	
		<!-- configurable parameters from within the bootstrap configuration -->
		<property name="enableLocalLoopback">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/EndpointReferenceResolver/enableLocalLoopback}</value>
		</property>
		<property name="defaultTransport">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/EndpointReferenceResolver/defaultTransport}</value>
		</property>
	</bean>
	<!-- 
			Messaging related Beans 
	-->
	<bean id="org.eclipse.swordfish.core.components.messaging.DeliveryChannelListener"
		class="org.eclipse.swordfish.core.components.messaging.impl.DeliveryChannelListenerBean" singleton="true">
		<property name="context">
			<ref parent="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
		</property>
		<property name="instanceManager"
			ref="org.eclipse.swordfish.core.components.instancemanager.InstanceManager"/>
		<property name="endpointManager"
			ref="org.eclipse.swordfish.core.components.endpointmanager.EndpointManager"/>
		<property name="headerProcessor"
			ref="org.eclipse.swordfish.core.components.headerprocessing.HeaderProcessor"/>
		<!-- configurable parameters from within the bootstrap configuration -->
		<property name="threadSleepTime">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/DeliveryChannelListenerBean/threadSleepTime}</value>
		</property>
		<property name="acceptTimeout">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/DeliveryChannelListenerBean/acceptedTimeout}</value>
		</property>
		<property name="minThreadCount">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/DeliveryChannelListenerBean/minThreadCount}</value>
		</property>
		<property name="maxThreadCount">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/DeliveryChannelListenerBean/maxThreadCount}</value>
		</property>
	</bean>
	<bean id="org.eclipse.swordfish.core.components.messaging.DeliveryChannelSender"
		class="org.eclipse.swordfish.core.components.messaging.impl.DeliveryChannelSenderBean">
		<property name="context">
			<ref parent="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
		</property>
		<property name="headerProcessorBean"
			ref="org.eclipse.swordfish.core.components.headerprocessing.HeaderProcessor"/>
	</bean>
	<!-- 
	  		Caches
	-->

	<bean id="org.eclipse.swordfish.security.assertionCache" class="com.opensymphony.oscache.base.Cache">
    <constructor-arg index="0">
        <value>true</value> <!-- useMemoryCaching -->
    </constructor-arg>
    <constructor-arg index="1">
        <value>false</value> <!-- unlimitedDiskCache -->
    </constructor-arg>
    <constructor-arg index="2">
        <value>false</value> <!-- overflowPersistence -->
    </constructor-arg>
	</bean>

	<bean id="org.eclipse.swordfish.core.components.processing.PolicyCache" class="com.opensymphony.oscache.base.Cache">
    <constructor-arg index="0">
        <value>true</value> <!-- useMemoryCaching -->
    </constructor-arg>
    <constructor-arg index="1">
        <value>false</value> <!-- unlimitedDiskCache -->
    </constructor-arg>
    <constructor-arg index="2">
        <value>false</value> <!-- overflowPersistence -->
    </constructor-arg>
	</bean>
		
	<bean id="org.eclipse.swordfish.core.components.validation.ValidationSchemaCache" class="com.opensymphony.oscache.base.Cache">
    <constructor-arg index="0">
        <value>true</value> <!-- useMemoryCaching -->
    </constructor-arg>
    <constructor-arg index="1">
        <value>false</value> <!-- unlimitedDiskCache -->
    </constructor-arg>
    <constructor-arg index="2">
        <value>false</value> <!-- overflowPersistence -->
    </constructor-arg>
	</bean>
		
	<bean id="org.eclipse.swordfish.papi.extension.advanced.HeaderSupport" lazy-init="true"
		class="org.eclipse.swordfish.core.components.helpers.HeaderSupportProxyFactory">
	</bean>
	
	<bean id="org.eclipse.swordfish.core.components.helpers.HeaderSupport"
		class="org.eclipse.swordfish.core.components.helpers.impl.HeaderSupportBean" singleton="true" lazy-init="true">
	</bean>

<!--
	locator proxy singelton
-->
	<bean id="org.eclipse.swordfish.core.components.locatorproxy.LocatorProxy"
		class="org.eclipse.swordfish.core.components.locatorproxy.impl.IonaLocatorProxyBean" singleton="true" init-method="init" destroy-method="destroy">
		<property name="locatorPresent">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/LocatorInUse}</value>
		</property>
		<property name="locatorMBeanName">
		    <value>IONA:class=com.iona.jbi.se.artixlocator.management.Manager</value>
		</property>	
		<property name="serviceNS" value="http://jbi.iona.com/locator"/>
		<property name="serviceName" value="ArtixLocatorSE"/>
		<property name="endpointName" value="Business"/>
		<property name="componentContext">
			<ref parent="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
		</property>
	</bean>

<!--

-->






	<!-- 
	  		Management
	-->
	<bean id="org.eclipse.swordfish.core.management.components.ManagementController"
		class="org.eclipse.swordfish.core.management.components.impl.ManagementControllerBean"
		init-method="init" destroy-method="destroy" singleton="true">
		<property name="mbeanServer" ref="mbeanServer"/>
	</bean>
	
	<bean id="org.eclipse.swordfish.core.management.ObjectNameFactory" class="org.eclipse.swordfish.core.management.objectname.ObjectNameFactory"
		destroy-method="destroy">
	</bean>
	
	<bean id="org.eclipse.swordfish.core.management.LoggerController" class="org.eclipse.swordfish.core.management.components.impl.LoggerControllerBean"
		destroy-method="destroy">
		<property name="instrumentationManager" ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"/>
	</bean>	
	
	<!-- common instance to register tasks -->
	<bean id="org.eclipse.swordfish.core.management.ManagementTimer" class="org.eclipse.swordfish.core.management.components.impl.NotificationTimer"
		destroy-method="cancel" />

	
	<bean id="org.eclipse.swordfish.core.management.messaging.SbbMonitorBackendFactory"
		class="org.eclipse.swordfish.core.management.messaging.impl.SbbMonitorBackendFactoryBean"
		init-method="init" destroy-method="destroy">
		<property name="objectNameFactory" ref="org.eclipse.swordfish.core.management.ObjectNameFactory"/>
		<property name="instrumentationManager" ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"/>
	</bean>

	<!-- Papi extensions -->
	          
	
		<!-- Instrumentation -->
	
	<bean id="org.eclipse.swordfish.papi.internal.extension.instrumentation.InternalInstrumentationManager"
		class="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManagerProxyFactory"
		lazy-init="true" destroy-method="destroy"/>
	
	<bean id="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"
		class="org.eclipse.swordfish.core.management.instrumentation.impl.InstrumentationManagerBean"
		singleton="true" destroy-method="destroy">
		<property name="mbeanServer" ref="mbeanServer"/>
		<property name="objectNameFactory" ref="org.eclipse.swordfish.core.management.ObjectNameFactory"/>
		<property name="managedObjects" ref="org.eclipse.swordfish.core.management.instrumentation.ManagedObjects"/>
	</bean>

	<bean id="org.eclipse.swordfish.core.management.instrumentation.ManagedObjects" class="java.util.HashMap"
		destroy-method="clear"/>

	<!-- Handlers for operational logging -->

	<bean id="org.eclipse.swordfish.core.management.operations.MBeanOperations" class="org.eclipse.swordfish.core.management.operations.impl.MBeanOperationsBean"
		destroy-method="destroy" singleton="true">
		<property name="mbeanServer">
			<ref bean="mbeanServer"/>
		</property>
		<property name="operations">
			<ref bean="org.eclipse.swordfish.core.management.operations.Operations"/>
		</property>		
	</bean>

	<bean id="org.eclipse.swordfish.core.management.operations.Operations" init-method="init" destroy-method="destroy"
		class="org.eclipse.swordfish.core.management.operations.impl.OperationsBean" singleton="true">
		<property name="handlers">
			<list>
				<value>org.eclipse.swordfish.mangement.NrPublisher</value>
				<value>org.eclipse.swordfish.core.management.FileLogger</value>
				<value>org.eclipse.swordfish.core.management.SnmpPublisher</value>
			</list>
		</property>
		<property name="filters">
			<map>
				<entry>
					<key><value>org.eclipse.swordfish.core.management.operations</value></key>
					<value>INFO</value>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="org.eclipse.swordfish.core.management.FileLogger" class="org.eclipse.swordfish.core.management.operations.impl.LocalFilePublisher"
		destroy-method="close">
		<!--<constructor-arg type="java.lang.String"><value>%t/sbb_operations%g.log</value></constructor-arg>--> <!-- name pattern (see javadoc) -->
	    <constructor-arg type="java.lang.String"><value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/FileAppender/NamePattern}</value></constructor-arg>
	    <constructor-arg type="int"><value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/FileAppender/Limit}</value></constructor-arg> <!-- file size limit in bytes -->
	    <constructor-arg type="int"><value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/FileAppender/Count}</value></constructor-arg> <!-- number of logfiles -->
		<property name="formatter"><ref bean="org.eclipse.swordfish.core.management.PlainFormatter"/></property>
	</bean>

	<bean id="org.eclipse.swordfish.core.management.PlainFormatter" class="org.eclipse.swordfish.core.management.operations.impl.PlainFormatter"/>
	
	<bean id="org.eclipse.swordfish.mangement.NrPublisher" class="org.eclipse.swordfish.core.management.operations.impl.NrPublisherBean" 
		init-method="init" destroy-method="destroy">
		<property name="operations" ref="org.eclipse.swordfish.core.management.operations.Operations"/>
		<property name="messageThreshold">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/MessageThreshold}</value>
		</property>
		<property name="maxMessages">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/MaxMessages}</value>
		</property>
		<property name="processingInterval">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/ProcessingInterval}</value>
		</property>
		<property name="activate">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/Activate}</value>
		</property>
		<property name="backends">
			<list>
				<ref bean="org.eclipse.swordfish.core.management.SbbPublisherBackend"/>
				<ref bean="org.eclipse.swordfish.core.management.HttpPublisherBackend"></ref>
			</list>
		</property>
		<property name="instrumentationManager" ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"/>
		<property name="managementTimer" ref="org.eclipse.swordfish.core.management.ManagementTimer"/>
	</bean>
	
	<bean id="org.eclipse.swordfish.core.management.HttpPublisherBackend"
		class="org.eclipse.swordfish.core.management.operations.impl.HttpPublisherBackendBean"
		destroy-method="destroy" lazy-init="true">
		<property name="operations" ref="org.eclipse.swordfish.core.management.operations.Operations"/>
		<property name="adapter" ref="org.eclipse.swordfish.core.management.adapter.EmAdapter"/>
		<property name="activate">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/ActivateHttp}</value>
		</property>
		<property name="url">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/Url}</value>
		</property>
	</bean>
	
	<bean id="org.eclipse.swordfish.core.management.SbbPublisherBackend" class="org.eclipse.swordfish.core.management.operations.impl.SbbPublisherBackendBean"
		destroy-method="destroy" lazy-init="true">
		<property name="adapter" ref="org.eclipse.swordfish.core.management.adapter.EmAdapter"/>
		<property name="activate" >
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/NrPublisher/ActivateSbb}</value>
		</property>
		<property name="service">
			<value>{http://services.sopware.org/management/ManagementNotification/1.0}ManagementNotification</value>
		</property>
	</bean>
	
	<bean id="org.eclipse.swordfish.core.management.SnmpPublisher" class="org.eclipse.swordfish.core.management.operations.impl.SnmpPublisherWrapper"
		init-method="init" destroy-method="destroy">
		<property name="implClassName" value="org.eclipse.swordfish.core.management.adapter.extension.SnmpAdapterImpl"/>
		<property name="adapter" ref="org.eclipse.swordfish.core.management.adapter.EmAdapter"/>
		<property name="targetHost">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/SnmpPublisher/TargetHost}</value>
		</property>        
		<property name="targetPort">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/SnmpPublisher/TargetPort}</value>
		</property>
		<property name="oidRoot">
			<value>5064.1.1.</value>
		</property>
		<property name="mipLocation">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/SnmpPublisher/MipLocation}</value>
		</property>
		<property name="activate">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/SnmpPublisher/Activate}</value>
		</property>
	</bean>
	
	
	
	<!-- JMX Adapters -->
	<bean id="org.eclipse.swordfish.core.management.adapter.EmAdapter"
		class="org.eclipse.swordfish.core.management.adapter.impl.EmAdapter" init-method="init" destroy-method="destroy">
		<property name="port">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/EmAdapter/Port}</value>
		</property>
		<property name="host">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/EmAdapter/Host}</value>
		</property>
		<property name="mbeanServer" ref="mbeanServer"/>
		<property name="objectNameRoot" value="sbb/adapter:name=mx4jadaptor"/>
		<property name="processor" value="mx4j.tools.adaptor.http.XSLTProcessor"/>
		<property name="username">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/EmAdapter/Username}</value>
		</property>
		<property name="password">
		    <value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/EmAdapter/Password}</value>
		</property>
		<property name="activate">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/EmAdapter/Activate}</value>
		</property>
		<property name="instrumentationManager" ref="org.eclipse.swordfish.core.management.instrumentation.InstrumentationManager"/>
	</bean>

	<bean id="org.eclipse.swordfish.core.management.adapter.HPManagementAdapter"
		class="org.eclipse.swordfish.core.management.adapter.impl.HPManagementAdapterWrapper"
		init-method="init" destroy-method="destroy" singleton="true">
		<property name="MBeanServer" ref="mbeanServer"/>
		<property name="implClassName">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/HPManagementAdapter/ImplClass}</value>
		</property>
		<property name="activate">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/HPManagementAdapter/Activate}</value>
		</property>
		<property name="configLocation">
			<value>$sbb_boot{Global[@sopcs:name='$sbb_sys{sop.infrastructure.id}']/Management/HPManagementAdapter/ConfigLocation}</value>
		</property>
	</bean>
		
	<bean id="mbeanServer" class="org.eclipse.swordfish.core.components.helpers.impl.MBeanServerReuseFactoryBean">
		<property name="componentContextAccess"
			ref="org.eclipse.swordfish.core.components.jbi.ComponentContextAccess"/>
	</bean>

	<alias name="mbeanServer" alias="javax.management.MBeanServer"/>

	<bean id="smartNamingStrategy" class="org.eclipse.swordfish.core.utils.jmx.SmartSpringNamingStrategy">
	</bean>
	
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" destroy-method="destroy">
	  <property name="server" ref="mbeanServer" />
	  <property name="beans">
	    <map>
				<entry key="sbb/internal:type=InternalSBBFactory"
					value-ref="org.eclipse.swordfish.core.components.iapi.InternalSBBFactory"/>
				<entry key="sbb/internal:type=InternalSBBFactoryAdapter"
					value-ref="org.eclipse.swordfish.papi.adapter.InternalSBBFactoryAdapter"/>					
				<entry key="sbb/internal:type=InstanceManager"
					value-ref="org.eclipse.swordfish.core.components.instancemanager.InstanceManager"/>
	    </map>
	  </property>
	  <property name="namingStrategy" ref="smartNamingStrategy"/>
	</bean>

</beans>
